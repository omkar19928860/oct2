parameters:
- name: env
  displayName: ENVIRONMENT
  type: string
  default: Dev
  values:
    - omkar
    - priya
variables: 
 -name :omkar-svc
  value:
  -name:priya_svc
   value


trigger : none
pool: hclpool
stages:
 - stage: terraforminit
   displayName: TERRAFORMINIT
   jobs:
     - job: terraforminit
       displayName: TERRAFORMINIT
       steps:
       - task: TerraformTask@5
         inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
           backendServiceArm: 'hclservicrc'
           backendAzureRmStorageAccountName: 'hclsa456233'
           backendAzureRmContainerName: 'tfstate'
           backendAzureRmKey: 'dev.terraform.tfstate'
 - stage: terraformplan
   displayName: TERRAFORMPLAN
   dependsOn: terraforminit
   jobs:
    
     - job: plan
       steps:
       - task: TerraformTask@5
         inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
           backendServiceArm: 'hclservicrc'
           backendAzureRmStorageAccountName: 'hclsa456233'
           backendAzureRmContainerName: 'tfstate'
           backendAzureRmKey: '$ {{  parameters.env }}.terraform.tfstate'
       
       - task: TerraformTask@5
         inputs:
           provider: 'azurerm'
           command: 'plan'
           workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
           commandOptions: '-out=tfplan.binary'
           environmentServiceNameAzureRM: 'hclservicrc'
       - publish: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}/tfplan.binary'
         artifact: terraformplan
 - stage: manualvalidation
   displayName: Manual
   dependsOn: terraformplan
   jobs:
     - job: validation
       pool: server
       steps:
       - task: ManualValidation@1
         inputs:
           notifyUsers: 'omkarsingh9487@gmail.com'
           onTimeout: 'resume'
 - stage: apply
   displayName: terraformapply
   dependsOn: manualvalidation
   condition: succeeded('manualvalidation')
   jobs:
     - job: apply
       steps:
       - download: current
         artifact: terraformplan
       - task: TerraformTask@5
         inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
           backendServiceArm: 'hclservicrc'
           backendAzureRmStorageAccountName: 'hclsa456233'
           backendAzureRmContainerName: 'tfstate'
           backendAzureRmKey: '$ {{  parameters.env }}.terraform.tfstate' 

       

       - task: TerraformTask@5
         inputs:
          provider: 'azurerm'
          command: 'apply'
          environmentServiceNameAzureRM: 'hclservicrc'
          workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'

 - stage: terraformdestroy
   displayName: terraformdestroy
   jobs:
    - job: terraformdestroy
      displayName: destroy
      steps:
      - task: TerraformTask@5
        inputs:
           provider: 'azurerm'
           command: 'init'
           workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
           backendServiceArm: 'hclservicrc'
           backendAzureRmStorageAccountName: 'hclsa456233'
           backendAzureRmContainerName: 'tfstate'
           backendAzureRmKey: '$ {{  parameters.env }}.terraform.tfstate' 
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/omk/${{ parameters.env }}'
          environmentServiceNameAzureRM: 'hclservicrc'
       
       
       
       


  
          
 



